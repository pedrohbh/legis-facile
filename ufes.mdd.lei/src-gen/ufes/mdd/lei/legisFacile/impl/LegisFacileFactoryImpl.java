/**
 * generated by Xtext 2.23.0
 */
package ufes.mdd.lei.legisFacile.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import ufes.mdd.lei.legisFacile.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LegisFacileFactoryImpl extends EFactoryImpl implements LegisFacileFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LegisFacileFactory init()
  {
    try
    {
      LegisFacileFactory theLegisFacileFactory = (LegisFacileFactory)EPackage.Registry.INSTANCE.getEFactory(LegisFacilePackage.eNS_URI);
      if (theLegisFacileFactory != null)
      {
        return theLegisFacileFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LegisFacileFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LegisFacileFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LegisFacilePackage.LEI: return createLei();
      case LegisFacilePackage.TYPE: return createType();
      case LegisFacilePackage.PRELIMINAR: return createPreliminar();
      case LegisFacilePackage.EPIGRAFE: return createEpigrafe();
      case LegisFacilePackage.EMENTA: return createEmenta();
      case LegisFacilePackage.PREAMBULO: return createPreambulo();
      case LegisFacilePackage.NORMATIVA: return createNormativa();
      case LegisFacilePackage.ARTIGO: return createArtigo();
      case LegisFacilePackage.CAPUT: return createCaput();
      case LegisFacilePackage.PARAGRAFO: return createParagrafo();
      case LegisFacilePackage.INCISO: return createInciso();
      case LegisFacilePackage.ALINEA: return createAlinea();
      case LegisFacilePackage.ITEM: return createItem();
      case LegisFacilePackage.FINAL: return createFinal();
      case LegisFacilePackage.VIGENCIA: return createVigencia();
      case LegisFacilePackage.REVOGACAO: return createRevogacao();
      case LegisFacilePackage.DATA_TYPE: return createDataType();
      case LegisFacilePackage.ENTITY: return createEntity();
      case LegisFacilePackage.FEATURE: return createFeature();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lei createLei()
  {
    LeiImpl lei = new LeiImpl();
    return lei;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Preliminar createPreliminar()
  {
    PreliminarImpl preliminar = new PreliminarImpl();
    return preliminar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Epigrafe createEpigrafe()
  {
    EpigrafeImpl epigrafe = new EpigrafeImpl();
    return epigrafe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ementa createEmenta()
  {
    EmentaImpl ementa = new EmentaImpl();
    return ementa;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Preambulo createPreambulo()
  {
    PreambuloImpl preambulo = new PreambuloImpl();
    return preambulo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Normativa createNormativa()
  {
    NormativaImpl normativa = new NormativaImpl();
    return normativa;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Artigo createArtigo()
  {
    ArtigoImpl artigo = new ArtigoImpl();
    return artigo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Caput createCaput()
  {
    CaputImpl caput = new CaputImpl();
    return caput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Paragrafo createParagrafo()
  {
    ParagrafoImpl paragrafo = new ParagrafoImpl();
    return paragrafo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Inciso createInciso()
  {
    IncisoImpl inciso = new IncisoImpl();
    return inciso;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Alinea createAlinea()
  {
    AlineaImpl alinea = new AlineaImpl();
    return alinea;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Item createItem()
  {
    ItemImpl item = new ItemImpl();
    return item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Final createFinal()
  {
    FinalImpl final_ = new FinalImpl();
    return final_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Vigencia createVigencia()
  {
    VigenciaImpl vigencia = new VigenciaImpl();
    return vigencia;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Revogacao createRevogacao()
  {
    RevogacaoImpl revogacao = new RevogacaoImpl();
    return revogacao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType createDataType()
  {
    DataTypeImpl dataType = new DataTypeImpl();
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Feature createFeature()
  {
    FeatureImpl feature = new FeatureImpl();
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LegisFacilePackage getLegisFacilePackage()
  {
    return (LegisFacilePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LegisFacilePackage getPackage()
  {
    return LegisFacilePackage.eINSTANCE;
  }

} //LegisFacileFactoryImpl
